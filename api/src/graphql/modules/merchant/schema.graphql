type Merchant implements Node {
  id: ID!
  name: String!
  address: String!
  latitude: Decimal
  longitude: Decimal
  logo: String
  photo: String
  rating: Decimal!
  totalReviews: Int!
  currency: CurrencyCode!
  distanceInKm: Decimal!
  deliveryFee: DeliveryFee!
  cuisineCategories: [String] # only return the category name
  menuCategories: [MenuCategory]
}

type CuisineCategory implements Node {
  id: ID!
  name: String!
  icon: String
}

type MenuCategory implements Node {
  id: ID!
  name: String!
  menuItems: [MenuItem]!
}

type MenuItem implements Node {
  id: ID!
  name: String!
  photo: String
  price: Int!
  currency: CurrencyCode!
  displayPrice: String!
}

type DeliveryFee {
  amount: Int!
  currency: CurrencyCode!
  displayAmount: String!
}

type MerchantEdge implements Edge {
  node: Merchant
  cursor: ID
}

type MerchantConnection implements Connection {
  edges: [MerchantEdge]!
  pageInfo: PageInfo!
}

type Query {
  merchants(input: MerchantsQueryInput!): MerchantConnection
  merchant(input: MerchantQueryInput!): Merchant
}

input SearchQuery {
  latitude: Decimal
  longitude: Decimal
  reverse: Boolean
}

input MerchantsQueryInput {
  query: SearchQuery # Optional for now
  first: Int
  after: ID
  last: Int
  before: ID
}

input MerchantQueryInput {
  id: Int!
}
